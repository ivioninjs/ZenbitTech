version: "3"

services:
  api:
    build:
      context: .
      dockerfile: ./bin/${NODEJS17}/Dockerfile
    container_name: "${PROJECT_NAME}-${NODEJS17}"
    restart: "always"
    ports:
      - "${HOST_MACHINE_UNSECURE_HOST_PORT}:3000"
    depends_on:
      - database
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
  database:
    build:
      context: .
      dockerfile: "./bin/${POSTGRES12}/Dockerfile"
    container_name: "${PROJECT_NAME}-${POSTGRES12}"
    restart: "always"
    ports:
      - "127.0.0.1:${HOST_MACHINE_POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  admin:
    build:
      context: .
      dockerfile: "./bin/${PG_ADMIN}/Dockerfile"
    container_name: "${PROJECT_NAME}-${PG_ADMIN}"
    restart: "always"
    depends_on:
      - database
    environment:
      - PGADMIN_DEFAULT_EMAIL=${ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "5050:80"
volumes:
  postgres:
