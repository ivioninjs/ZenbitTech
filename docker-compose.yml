version: "3"

services:
  nginx:
    build:
      context: .
      dockerfile: ./bin/nginx/Dockerfile
    depends_on:
      - api
    restart: "always"
    ports:
      - "80:80"

  api:
    build:
      context: .
      dockerfile: ./bin/${NODEJS17}/Dockerfile
    container_name: "${PROJECT_NAME}-${NODEJS17}"
    restart: "on-failure"
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - database
    environment:
      - DATABASE_TYPE=${POSTGRES12}
      - POSTGRES_HOST=database
      - API_PORT=${API_PORT}
      - TYPEORM_USER=${TYPEORM_USER}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DB_NAME=${TYPEORM_DB_NAME}
      - TYPEORM_PORT=${TYPEORM_PORT}
  database:
    build:
      context: .
      dockerfile: "./bin/${POSTGRES12}/Dockerfile"
    container_name: "${PROJECT_NAME}-${POSTGRES12}"
    restart: "always"
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${TYPEORM_USER}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DB_NAME}
  admin:
    build:
      context: .
      dockerfile: "./bin/${PG_ADMIN}/Dockerfile"
    container_name: "${PROJECT_NAME}-${PG_ADMIN}"
    restart: "always"
    depends_on:
      - database
    environment:
      - PGADMIN_DEFAULT_EMAIL=${ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "5050:80"
